//---------------------------------------------------------------------------
#include <vcl.h>
#pragma hdrstop

#include "Varicode.h"

Varicode::Varicode()
{
    MakeTable();
}

void Varicode::MakeTable()
{
    Table[   32]="100";       //  <SPACE>
    Table[  101]="1000";       // e
    Table[  116]="1100";       // t
    Table[  111]="10000";       // o
    Table[   97]="10100";       // a
    Table[  105]="11000";       // i
    Table[  110]="11100";       // n
    Table[  114]="100000";       // r
    Table[  115]="101000";       // s
    Table[  108]="101100";       // l
    Table[  104]="110000";       // h
    Table[  100]="110100";       // d
    Table[   99]="111000";       // c
    Table[  117]="111100";       // u
    Table[  109]="1000000";       // m
    Table[  102]="1010000";       // f
    Table[  112]="1010100";       // p
    Table[  103]="1011000";       // g
    Table[  121]="1011100";       // y
    Table[   98]="1100000";       // b
    Table[  119]="1101000";       // w
    Table[  118]="1101100";       // v
    Table[  107]="1110000";       // k
    Table[  120]="1110100";       // x
    Table[  113]="1111000";       // q
    Table[  122]="1111100";       // z
    Table[  106]="10000000";       // j
    Table[   44]="10100000";       // ,
    Table[    8]="10101000";       // <BS>
    Table[   13]="10101100";       // <CR>
    Table[   84]="10110000";       // T
    Table[   83]="10110100";       // S
    Table[   69]="10111000";       // E
    Table[   65]="10111100";       // A
    Table[   73]="11000000";       // I
    Table[   79]="11010000";       // O
    Table[   67]="11010100";       // C
    Table[   82]="11011000";       // R
    Table[   68]="11011100";       // D
    Table[   48]="11100000";       // 0
    Table[   77]="11101000";       // M
    Table[   80]="11101100";       // P
    Table[   49]="11110000";       // 1
    Table[   76]="11110100";       // L
    Table[   70]="11111000";       // F
    Table[   78]="11111100";       // N
    Table[   66]="100000000";       // B
    Table[   50]="101000000";       // 2
    Table[   71]="101010000";       // G
    Table[   51]="101010100";       // 3
    Table[   72]="101011000";       // H
    Table[   85]="101011100";       // U
    Table[   53]="101100000";       // 5
    Table[   87]="101101000";       // W
    Table[   54]="101101100";       // 6
    Table[   88]="101110000";       // X
    Table[   52]="101110100";       // 4
    Table[   89]="101111000";       // Y
    Table[   75]="101111100";       // K
    Table[   56]="110000000";       // 8
    Table[   55]="110100000";       // 7
    Table[   86]="110101000";       // V
    Table[   57]="110101100";       // 9
    Table[   81]="110110000";       // Q
    Table[   74]="110110100";       // J
    Table[   90]="110111000";       // Z
    Table[   39]="110111100";       // '
    Table[   33]="111000000";       // !
    Table[   63]="111010000";       // ?
    Table[   46]="111010100";       // .
    Table[   45]="111011000";       // -
    Table[   61]="111011100";       // =
    Table[   43]="111100000";       // +
    Table[   47]="111101000";       // /
    Table[   58]="111101100";       // :
    Table[   41]="111110000";       // )
    Table[   40]="111110100";       // (
    Table[   59]="111111000";       // ;
    Table[   34]="111111100";       // "
    Table[   38]="1000000000";       // &
    Table[   64]="1010000000";       // @
    Table[   37]="1010100000";       // %
    Table[   36]="1010101000";       // $
    Table[   96]="1010101100";       // `
    Table[   95]="1010110000";       // _
    Table[   42]="1010110100";       // *
    Table[  124]="1010111000";       // |
    Table[   62]="1010111100";       // >
    Table[   60]="1011000000";       // <
    Table[   92]="1011010000";       // "\ "
    Table[   94]="1011010100";       // ^
    Table[   35]="1011011000";       // #
    Table[  123]="1011011100";       // {
    Table[  125]="1011100000";       // }
    Table[   91]="1011101000";       // [
    Table[   93]="1011101100";       // ]
    Table[  126]="1011110000";       // ~
    Table[  160]="1011110100";       // †
    Table[  161]="1011111000";       // °
    Table[  162]="1011111100";       // ¢
    Table[  163]="1100000000";       // £
    Table[  164]="1101000000";       // §
    Table[  165]="1101010000";       // •
    Table[  166]="1101010100";       // ¶
    Table[  167]="1101011000";       // ß
    Table[  168]="1101011100";       // ®
    Table[  169]="1101100000";       // ©
    Table[  170]="1101101000";       // ™
    Table[  171]="1101101100";       // ´
    Table[  172]="1101110000";       // ¨
    Table[  173]="1101110100";       // ≠
    Table[  174]="1101111000";       // Æ
    Table[  175]="1101111100";       // Ø
    Table[  176]="1110000000";       // ∞
    Table[  177]="1110100000";       // ±
    Table[  178]="1110101000";       // ≤
    Table[  179]="1110101100";       // ≥
    Table[  180]="1110110000";       // ¥
    Table[  181]="1110110100";       // µ
    Table[  182]="1110111000";       // ∂
    Table[  183]="1110111100";       // ∑
    Table[  184]="1111000000";       // ∏
    Table[  185]="1111010000";       // π
    Table[  186]="1111010100";       // ∫
    Table[  187]="1111011000";       // ª
    Table[  188]="1111011100";       // º
    Table[  189]="1111100000";       // Ω
    Table[  190]="1111101000";       // æ
    Table[  191]="1111101100";       // ø
    Table[  192]="1111110000";       // ¿
    Table[  193]="1111110100";       // ¡
    Table[  194]="1111111000";       // ¬
    Table[  195]="1111111100";       // √
    Table[  196]="10000000000";       // ƒ
    Table[  197]="10100000000";       // ≈
    Table[  198]="10101000000";       // ∆
    Table[  199]="10101010000";       // «
    Table[  200]="10101010100";       // »
    Table[  201]="10101011000";       // …
    Table[  202]="10101011100";       //  
    Table[  203]="10101100000";       // À
    Table[  204]="10101101000";       // Ã
    Table[  205]="10101101100";       // Õ
    Table[  206]="10101110000";       // Œ
    Table[  207]="10101110100";       // œ
    Table[  208]="10101111000";       // –
    Table[  209]="10101111100";       // —
    Table[  210]="10110000000";       // “
    Table[  211]="10110100000";       // ”
    Table[  212]="10110101000";       // ‘
    Table[  213]="10110101100";       // ’
    Table[  214]="10110110000";       // ÷
    Table[  215]="10110110100";       // ◊
    Table[  216]="10110111000";       // ÿ
    Table[  217]="10110111100";       // Ÿ
    Table[  218]="10111000000";       // ⁄
    Table[  219]="10111010000";       // €
    Table[  220]="10111010100";       // ‹
    Table[  221]="10111011000";       // ›
    Table[  222]="10111011100";       // ﬁ
    Table[  223]="10111100000";       // ﬂ
    Table[  224]="10111101000";       // ‡
    Table[  225]="10111101100";       // ·
    Table[  226]="10111110000";       // ‚
    Table[  227]="10111110100";       // „
    Table[  228]="10111111000";       // ‰
    Table[  229]="10111111100";       // Â
    Table[  230]="11000000000";       // Ê
    Table[  231]="11010000000";       // Á
    Table[  232]="11010100000";       // Ë
    Table[  233]="11010101000";       // È
    Table[  234]="11010101100";       // Í
    Table[  235]="11010110000";       // Î
    Table[  236]="11010110100";       // Ï
    Table[  237]="11010111000";       // Ì
    Table[  238]="11010111100";       // Ó
    Table[  239]="11011000000";       // Ô
    Table[  240]="11011010000";       // 
    Table[  241]="11011010100";       // Ò
    Table[  242]="11011011000";       // Ú
    Table[  243]="11011011100";       // Û
    Table[  244]="11011100000";       // Ù
    Table[  245]="11011101000";       // ı
    Table[  246]="11011101100";       // ˆ
    Table[  247]="11011110000";       // ˜
    Table[  248]="11011110100";       // ¯
    Table[  249]="11011111000";       // ˘
    Table[  250]="11011111100";       // ˙
    Table[  251]="11100000000";       // ˚
    Table[  252]="11101000000";       // ¸
    Table[  253]="11101010000";       // ˝
    Table[  254]="11101010100";       // ˛
    Table[  255]="11101011000";       // ˇ
    Table[    0]="11101011100";       // <NUL> (IDLE)
    Table[    1]="11101100000";       // <STH> start of header
    Table[    2]="11101101000";       // <STX> start of text
    Table[    3]="11101101100";       //
    Table[    4]="11101110000";       // <EOT> end of text
    Table[    5]="11101110100";       //
    Table[    6]="11101111000";       //
    Table[    7]="11101111100";       //
    Table[    9]="11110000000";       // <TAB>
    Table[   10]="11110100000";       // <LF>
    Table[   11]="11110101000";       //
    Table[   12]="11110101100";       //
    Table[   14]="11110110000";       //
    Table[   15]="11110110100";       //
    Table[   16]="11110111000";       //
    Table[   17]="11110111100";       //
    Table[   18]="11111000000";       //
    Table[   19]="11111010000";       //
    Table[   20]="11111010100";       //
    Table[   21]="11111011000";       //
    Table[   22]="11111011100";       //
    Table[   23]="11111100000";       //
    Table[   24]="11111101000";       //
    Table[   25]="11111101100";       //
    Table[   26]="11111110000";       //
    Table[   27]="11111110100";       //
    Table[   28]="11111111000";       //
    Table[   29]="11111111100";       //
    Table[   30]="100000000000";       //
    Table[   31]="101000000000";       //
    Table[  127]="101010000000";       //   <DEL> (not printable character)
    Table[  128]="101010100000";       // Ä
    Table[  129]="101010101000";       // Å
    Table[  130]="101010101100";       // Ç
    Table[  131]="101010110000";       // É
    Table[  132]="101010110100";       // Ñ
    Table[  133]="101010111000";       // Ö
    Table[  134]="101010111100";       // Ü
    Table[  135]="101011000000";       // á
    Table[  136]="101011010000";       // à
    Table[  137]="101011010100";       // â
    Table[  138]="101011011000";       // ä
    Table[  139]="101011011100";       // ã
    Table[  140]="101011100000";       // å
    Table[  141]="101011101000";       // ç
    Table[  142]="101011101100";       // é
    Table[  143]="101011110000";       // è
    Table[  144]="101011110100";       // ê
    Table[  145]="101011111000";       // ë
    Table[  146]="101011111100";       // í
    Table[  147]="101100000000";       // ì
    Table[  148]="101101000000";       // î
    Table[  149]="101101010000";       // ï
    Table[  150]="101101010100";       // ñ
    Table[  151]="101101011000";       // ó
    Table[  152]="101101011100";       // ò
    Table[  153]="101101100000";       // ô
    Table[  154]="101101101000";       // ö
    Table[  155]="101101101100";       // õ
    Table[  156]="101101110000";       // ú
    Table[  157]="101101110100";       // ù
    Table[  158]="101101111000";       // û
    Table[  159]="101101111100";       // ü
    /*
    Table[     ]="101110000000";       //
    Table[     ]="101110100000";       //
    Table[     ]="101110101000";       //
    Table[     ]="101110101100";       //
    Table[     ]="101110110000";       //
    Table[    0]="101110110100";       //
    Table[    0]="101110111000";       //
    Table[    0]="101110111100";       //
    Table[    0]="101111000000";       //
    Table[    0]="101111010000";       //
    Table[    0]="101111010100";       //
    Table[    0]="101111011000";       //
    Table[    0]="101111011100";       //
    Table[    0]="101111100000";       //
    Table[    0]="101111101000";       //
    Table[    0]="101111101100";       //
    Table[    0]="101111110000";       //
    Table[    0]="101111110100";       //
    Table[    0]="101111111000";       //
    Table[    0]="101111111100";       //
    Table[    0]="110000000000";       //
    Table[    0]="110100000000";       //
    Table[    0]="110101000000";       //
    Table[    0]="110101010000";       //
    Table[    0]="110101010100";       //
    Table[    0]="110101011000";       //
    Table[    0]="110101011100";       //
    Table[    0]="110101100000";       //
    Table[    0]="110101101000";       //
    Table[    0]="110101101100";       //
    Table[    0]="110101110000";       //
    Table[    0]="110101110100";       //
    Table[    0]="110101111000";       //
    Table[    0]="110101111100";       //
    Table[    0]="110110000000";       //
    Table[    0]="110110100000";       //
    Table[    0]="110110101000";       //
    Table[    0]="110110101100";       //
    Table[    0]="110110110000";       //
    Table[    0]="110110110100";       //
    Table[    0]="110110111000";       //
    Table[    0]="110110111100";       //
    Table[    0]="110111000000";       //
    Table[    0]="110111010000";       //
    Table[    0]="110111010100";       //
    Table[    0]="110111011000";       //
    Table[    0]="110111011100";       //
    Table[    0]="110111100000";       //
    Table[    0]="110111101000";       //
    Table[    0]="110111101100";       //
    Table[    0]="110111110000";       //
    Table[    0]="110111110100";       //
    Table[    0]="110111111000";       //
    Table[    0]="110111111100";       //
    Table[    0]="111000000000";       //
    Table[    0]="111010000000";       //
    Table[    0]="111010100000";       //
    Table[    0]="111010101000";       //
    Table[    0]="111010101100";       //
    Table[    0]="111010110000";       //
    Table[    0]="111010110100";       //
    Table[    0]="111010111000";       //
    Table[    0]="111010111100";       //
    Table[    0]="111011000000";       //
    Table[    0]="111011010000";       //
    Table[    0]="111011010100";       //
    Table[    0]="111011011000";       //
    Table[    0]="111011011100";       //
    Table[    0]="111011100000";       //
    Table[    0]="111011101000";       //
    Table[    0]="111011101100";       //
    Table[    0]="111011110000";       //
    Table[    0]="111011110100";       // 
    Table[    0]="111011111000";       // 
    Table[    0]="111011111100";       //
    Table[    0]="111100000000";       // 
    Table[    0]="111101000000";       //
    Table[    0]="111101010000";       // 
    Table[    0]="111101010100";       //
    Table[    0]="111101011000";       // 
    Table[    0]="111101011100";       // 
    Table[    0]="111101100000";       // 
    Table[    0]="111101101000";       //
    Table[    0]="111101101100";       // 
    Table[    0]="111101110000";       //
    Table[    0]="111101110100";       //
    Table[    0]="111101111000";       //
    Table[    0]="111101111100";       // 
    Table[    0]="111110000000";       // 
    Table[    0]="111110100000";       //
    Table[    0]="111110101000";       //
    Table[    0]="111110101100";       //
    Table[    0]="111110110000";       // 
    Table[    0]="111110110100";       // 
    Table[    0]="111110111000";       //
    Table[    0]="111110111100";       // 
    Table[    0]="111111000000";       // 
    Table[    0]="111111010000";       //
    Table[    0]="111111010100";       // 
    Table[    0]="111111011000";       //
    Table[    0]="111111011100";       //
    Table[    0]="111111100000";       //
    Table[    0]="111111101000";       //
    Table[    0]="111111101100";       // 
    Table[    0]="111111110000";       //
    Table[    0]="111111110100";       // 
    Table[    0]="111111111000";       //
    Table[    0]="111111111100";       // 
    Table[    0]="1000000000000";       //
    Table[    0]="1010000000000";       // 
    Table[    0]="1010100000000";       //
    Table[    0]="1010101000000";       // 
    Table[    0]="1010101010000";       //
    Table[    0]="1010101010100";       // 
    Table[    0]="1010101011000";       //
    Table[    0]="1010101011100";       //
    Table[    0]="1010101100000";       //
    Table[    0]="1010101101000";       // 
    Table[    0]="1010101101100";       //
    Table[    0]="1010101110000";       //
    Table[    0]="1010101110100";       // 
    Table[    0]="1010101111000";       //
    Table[    0]="1010101111100";       // 
    Table[    0]="1010110000000";       // 
    Table[    0]="1010110100000";       // 
    Table[    0]="1010110101000";       // 
    Table[    0]="1010110101100";       //
    Table[    0]="1010110110000";       //
    Table[    0]="1010110110100";       // 
    Table[    0]="1010110111000";       //
    Table[    0]="1010110111100";       //
    Table[    0]="1010111000000";       //
    Table[    0]="1010111010000";       // 
    Table[    0]="1010111010100";       // 
    Table[    0]="1010111011000";       //
    Table[    0]="1010111011100";       // 
    Table[    0]="1010111100000";       //
    Table[    0]="1010111101000";       // 
    Table[    0]="1010111101100";       //
    Table[    0]="1010111110000";       // 
    Table[    0]="1010111110100";       // 
    Table[    0]="1010111111000";       // 
    Table[    0]="1010111111100";       //
    Table[    0]="1011000000000";       // 
    Table[    0]="1011010000000";       //
    Table[    0]="1011010100000";       //
    Table[    0]="1011010101000";       //
    Table[    0]="1011010101100";       // 
    Table[    0]="1011010110000";       // 
    Table[    0]="1011010110100";       //
    Table[    0]="1011010111000";       //
    Table[    0]="1011010111100";       //
    Table[    0]="1011011000000";       //
    Table[    0]="1011011010000";       // 
    Table[    0]="1011011010100";       //
    Table[    0]="1011011011000";       // 
    Table[    0]="1011011011100";       // 
    Table[    0]="1011011100000";       //
    Table[    0]="1011011101000";       //
    Table[    0]="1011011101100";       //
    Table[    0]="1011011110000";       //
    Table[    0]="1011011110100";       //
    Table[    0]="1011011111000";       //
    Table[    0]="1011011111100";       // 
    Table[    0]="1011100000000";       //
    Table[    0]="1011101000000";       // 
    Table[    0]="1011101010000";       //
    Table[    0]="1011101010100";       // 
    Table[    0]="1011101011000";       // 
    Table[    0]="1011101011100";       // 
    Table[    0]="1011101100000";       // 
    Table[    0]="1011101101000";       // 
    Table[    0]="1011101101100";       //
    Table[    0]="1011101110000";       // 
    Table[    0]="1011101110100";       //
    Table[    0]="1011101111000";       //
    Table[    0]="1011101111100";       //
    Table[    0]="1011110000000";       // 
    Table[    0]="1011110100000";       //
    Table[    0]="1011110101000";       //
    Table[    0]="1011110101100";       // 
    Table[    0]="1011110110000";       //
    Table[    0]="1011110110100";       // 
    Table[    0]="1011110111000";       // 
    Table[    0]="1011110111100";       // 
    Table[    0]="1011111000000";       // 
    Table[    0]="1011111010000";       //
    Table[    0]="1011111010100";       //
    Table[    0]="1011111011000";       // 
    Table[    0]="1011111011100";       //
    Table[    0]="1011111100000";       //
    Table[    0]="1011111101000";       //
    Table[    0]="1011111101100";       // 
    Table[    0]="1011111110000";       // 
    Table[    0]="1011111110100";       //
    Table[    0]="1011111111000";       // 
    Table[    0]="1011111111100";       //
    Table[    0]="1100000000000";       // 
    Table[    0]="1101000000000";       //
    Table[    0]="1101010000000";       // 
    Table[    0]="1101010100000";       // 
    Table[    0]="1101010101000";       // 
    Table[    0]="1101010101100";       //
    Table[    0]="1101010110000";       // 
    Table[    0]="1101010110100";       //
    Table[    0]="1101010111000";       //
    Table[    0]="1101010111100";       //
    Table[    0]="1101011000000";       // 
    Table[    0]="1101011010000";       // 
    Table[    0]="1101011010100";       //
    Table[    0]="1101011011000";       //
    Table[    0]="1101011011100";       //
    Table[    0]="1101011100000";       // 
    Table[    0]="1101011101000";       // 
    Table[    0]="1101011101100";       //
    Table[    0]="1101011110000";       // 
    Table[    0]="1101011110100";       // 
    Table[    0]="1101011111000";       //
    Table[    0]="1101011111100";       //
    Table[    0]="1101100000000";       //
    Table[    0]="1101101000000";       //
    Table[    0]="1101101010000";       //
    Table[    0]="1101101010100";       //
    Table[    0]="1101101011000";       // 
    Table[    0]="1101101011100";       //
    Table[    0]="1101101100000";       // 
    Table[    0]="1101101101000";       //
    Table[    0]="1101101101100";       // 
    Table[    0]="1101101110000";       // 
    Table[    0]="1101101110100";       // 
    Table[    0]="1101101111000";       // 
    Table[    0]="1101101111100";       // 
    Table[    0]="1101110000000";       //
    Table[    0]="1101110100000";       // 
    Table[    0]="1101110101000";       //
    Table[    0]="1101110101100";       //
    Table[    0]="1101110110000";       //
    Table[    0]="1101110110100";       // 
    Table[    0]="1101110111000";       //
    Table[    0]="1101110111100";       //
    Table[    0]="1101111000000";       //
    Table[    0]="1101111010000";       //
    Table[    0]="1101111010100";       // 
    Table[    0]="1101111011000";       // 
    Table[    0]="1101111011100";       // 
    Table[    0]="1101111100000";       // 
    Table[    0]="1101111101000";       //
    Table[    0]="1101111101100";       //
    Table[    0]="1101111110000";       // 
    Table[    0]="1101111110100";       //
    Table[    0]="1101111111000";       //
    Table[    0]="1101111111100";       //
    Table[    0]="1110000000000";       // 
    Table[    0]="1110100000000";       // 
    Table[    0]="1110101000000";       //
    Table[    0]="1110101010000";       // 
    Table[    0]="1110101010100";       //
    Table[    0]="1110101011000";       // 
    Table[    0]="1110101011100";       //
    Table[    0]="1110101100000";       // 
    Table[    0]="1110101101000";       // 
    Table[    0]="1110101101100";       // 
    Table[    0]="1110101110000";       //
    Table[    0]="1110101110100";       // 
    Table[    0]="1110101111000";       //
    Table[    0]="1110101111100";       //
    Table[    0]="1110110000000";       //
    Table[    0]="1110110100000";       // 
    Table[    0]="1110110101000";       // 
    Table[    0]="1110110101100";       //
    Table[    0]="1110110110000";       //
    Table[    0]="1110110110100";       //
    Table[    0]="1110110111000";       // 
    Table[    0]="1110110111100";       // 
    Table[    0]="1110111000000";       //
    Table[    0]="1110111010000";       // 
    Table[    0]="1110111010100";       // 
    Table[    0]="1110111011000";       //
    Table[    0]="1110111011100";       // 
    Table[    0]="1110111100000";       //
    Table[    0]="1110111101000";       //
    Table[    0]="1110111101100";       //
    Table[    0]="1110111110000";       //
    Table[    0]="1110111110100";       // 
    Table[    0]="1110111111000";       //
    Table[    0]="1110111111100";       // 
    Table[    0]="1111000000000";       //
    Table[    0]="1111010000000";       // 
    Table[    0]="1111010100000";       // 
    Table[    0]="1111010101000";       // 
    Table[    0]="1111010101100";       // 
    Table[    0]="1111010110000";       // 
    Table[    0]="1111010110100";       //
    Table[    0]="1111010111000";       // 
    Table[    0]="1111010111100";       //
    Table[    0]="1111011000000";       //
    Table[    0]="1111011010000";       //
    Table[    0]="1111011010100";       // 
    Table[    0]="1111011011000";       //
    Table[    0]="1111011011100";       //
    Table[    0]="1111011100000";       // 
    Table[    0]="1111011101000";       //
    Table[    0]="1111011101100";       //
    Table[    0]="1111011110000";       // 
    Table[    0]="1111011110100";       // 
    Table[    0]="1111011111000";       // 
    Table[    0]="1111011111100";       //
    Table[    0]="1111100000000";       //
    Table[    0]="1111101000000";       // 
    Table[    0]="1111101010000";       //
    Table[    0]="1111101010100";       //
    Table[    0]="1111101011000";       //
    Table[    0]="1111101011100";       // 
    Table[    0]="1111101100000";       // 
    Table[    0]="1111101101000";       //
    Table[    0]="1111101101100";       // 
    Table[    0]="1111101110000";       //
    Table[    0]="1111101110100";       // 
    Table[    0]="1111101111000";       //
    Table[    0]="1111101111100";       // 
    Table[    0]="1111110000000";       // 
    Table[    0]="1111110100000";       // 
    Table[    0]="1111110101000";       //
    Table[    0]="1111110101100";       //
    Table[    0]="1111110110000";       //
    Table[    0]="1111110110100";       //
    Table[    0]="1111110111000";       //
    Table[    0]="1111110111100";       //
    Table[    0]="1111111000000";       //
    Table[    0]="1111111010000";       //
    Table[    0]="1111111010100";       //
    Table[    0]="1111111011000";       //
    Table[    0]="1111111011100";       //
    Table[    0]="1111111100000";       //
    Table[    0]="1111111101000";       //
    Table[    0]="1111111101100";       //
    Table[    0]="1111111110000";       //
    Table[    0]="1111111110100";       //
    Table[    0]="1111111111000";       //
    Table[    0]="1111111111100";       //
    */
}

int Varicode::Decode(int bit)
{
    int L,i;

    if(bit) Buffer = Buffer + "1";
    else    Buffer = Buffer + "0";

    L = Buffer.Length();
    if(L<3) return -1;

    if(Buffer.SubString(L-2,3)=="001")
    {
       AnsiString Dummy;
       Dummy = Buffer.SubString(1,L-1);
       Buffer = "1";
       for(i=0;i<VARICODESIZE;i++) if(Table[i]==Dummy) return i;
    }
    return -1;
}

AnsiString Varicode::EncodeChar(int ch)
{
    return Table[ch];
}

AnsiString Varicode::EncodeCharSimple(int ch)
{
    AnsiString R="";
    for(int t=0;t<7;t++)
    {
      if(ch & (1<<t)) R+="1";
      else R+="0";
    }
    return R;
}

void Varicode::DecodeString(AnsiString S, int *out, int &size)
{
    int c;
    int L = S.Length();

    for(int t=1;t<=L;t++)
    {
        c = Decode(S[t]=='1');
        if(c!=-1) out[size++]=c;
    }
}

void Varicode::DecodeBuffer(char *source, int L)
{
    int c;
    for(int t=0;t<L;t++)
    {
        //out[outsize++] = source[t];
        c = Decode(source[t]=='1');
        if(c!=-1) out[outsize++]=c;
    }
}

void Varicode::DecodeBufferSimple(char *source, int L)
{
    for(int t=0;t<L;t+=7)
    {
        int ch = 0;
        for(int j=0;j<7;j++)
        {
           if(source[t+j]=='1') ch |= (1<<j);
        }
        out[outsize++]=ch;
    }
}
